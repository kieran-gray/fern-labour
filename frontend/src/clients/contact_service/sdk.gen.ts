// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type {
  ContactUsSendMessageApiV1ContactUsPostData,
  ContactUsSendMessageApiV1ContactUsPostResponse,
  DocsDocsGetResponse,
  GetUserApiV1UserGetResponse,
  GetUserSummaryApiV1UserSummaryGetResponse,
  HealthcheckApiV1HealthGetResponse,
  LoginApiV1AuthLoginPostData,
  LoginApiV1AuthLoginPostResponse,
  OpenapiOpenapiJsonGetResponse,
  RedirectToDocsGetResponse,
  RedocRedocGetResponse,
} from './types.gen';

export class AuthService {
  /**
   * Login
   * Login endpoint to authenticate the user and return an access token.
   *
   * Args:
   * username (str): The username of the user attempting to log in.
   * password (str): The password of the user.
   *
   * Returns:
   * TokenResponse: Contains the access token upon successful authentication.
   * @param data The data for the request.
   * @param data.formData
   * @returns TokenResponse Successful Response
   * @throws ApiError
   */
  public static login(
    data: LoginApiV1AuthLoginPostData
  ): CancelablePromise<LoginApiV1AuthLoginPostResponse> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/api/v1/auth/login',
      formData: data.formData,
      mediaType: 'application/x-www-form-urlencoded',
      errors: {
        422: 'Validation Error',
      },
    });
  }
}

export class ContactUsService {
  /**
   * Contact Us Send Message
   * @param data The data for the request.
   * @param data.requestBody
   * @returns void Successful Response
   * @throws ApiError
   */
  public static contactUsSendMessage(
    data: ContactUsSendMessageApiV1ContactUsPostData
  ): CancelablePromise<ContactUsSendMessageApiV1ContactUsPostResponse> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/api/v1/contact-us/',
      body: data.requestBody,
      mediaType: 'application/json',
      errors: {
        400: 'Bad Request',
        422: 'Validation Error',
        429: 'Too Many Requests',
        500: 'Internal Server Error',
      },
    });
  }
}

export class GeneralService {
  /**
   * Redirect To Docs
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static redirectToDocsGet(): CancelablePromise<RedirectToDocsGetResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/',
    });
  }

  /**
   * Docs
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static docsDocsGet(): CancelablePromise<DocsDocsGetResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/docs',
    });
  }

  /**
   * Openapi
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static openapiOpenapiJsonGet(): CancelablePromise<OpenapiOpenapiJsonGetResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/openapi.json',
    });
  }

  /**
   * Redoc
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static redocRedocGet(): CancelablePromise<RedocRedocGetResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/redoc',
    });
  }
}

export class HealthService {
  /**
   * Healthcheck
   * @returns string Successful Response
   * @throws ApiError
   */
  public static healthcheck(): CancelablePromise<HealthcheckApiV1HealthGetResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/api/v1/health',
    });
  }
}

export class UserService {
  /**
   * Get User
   * @returns UserResponse Successful Response
   * @throws ApiError
   */
  public static getUser(): CancelablePromise<GetUserApiV1UserGetResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/api/v1/user/',
      errors: {
        400: 'Bad Request',
        401: 'Unauthorized',
        404: 'Not Found',
        500: 'Internal Server Error',
      },
    });
  }

  /**
   * Get User Summary
   * @returns UserSummaryResponse Successful Response
   * @throws ApiError
   */
  public static getUserSummary(): CancelablePromise<GetUserSummaryApiV1UserSummaryGetResponse> {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/api/v1/user/summary',
      errors: {
        400: 'Bad Request',
        401: 'Unauthorized',
        404: 'Not Found',
        500: 'Internal Server Error',
      },
    });
  }
}
