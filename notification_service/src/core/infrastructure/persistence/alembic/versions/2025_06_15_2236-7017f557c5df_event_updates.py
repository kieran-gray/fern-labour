"""Event updates

Revision ID: 7017f557c5df
Revises: 22b4deb6e293
Create Date: 2025-06-15 22:36:09.172980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from src.core.infrastructure.persistence.domain_event.table import JSONEncryptedType

# revision identifiers, used by Alembic.
revision: str = '7017f557c5df'
down_revision: Union[str, None] = '22b4deb6e293'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('PROCESSING', 'COMPLETED', name='processing_status_enum').create(op.get_bind())
    op.create_table('consumer_processed_events',
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('PROCESSING', 'COMPLETED', name='processing_status_enum', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('event_id', name=op.f('pk_consumer_processed_events'))
    )
    op.create_table('domain_events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('aggregate_id', sa.String(), nullable=False),
    sa.Column('aggregate_type', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('data', JSONEncryptedType(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_domain_events'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('domain_events')
    op.drop_table('consumer_processed_events')
    sa.Enum('PROCESSING', 'COMPLETED', name='processing_status_enum').drop(op.get_bind())
    # ### end Alembic commands ###
