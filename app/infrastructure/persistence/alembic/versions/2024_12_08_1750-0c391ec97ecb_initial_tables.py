"""test

Revision ID: 0c391ec97ecb
Revises:
Create Date: 2024-12-08 17:50:32.066788

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0c391ec97ecb"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("EARLY", "ACTIVE", "TRANSITION", "PUSHING", "COMPLETE", name="labor_phase").create(
        op.get_bind()
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.LargeBinary(), nullable=False),
        sa.Column(
            "roles",
            sa.ARRAY(
                postgresql.ENUM("ADMIN", "USER", name="userroleenum", create_type=False)
            ),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    op.create_table(
        "labor_sessions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column(
            "current_phase",
            postgresql.ENUM(
                "EARLY",
                "ACTIVE",
                "TRANSITION",
                "PUSHING",
                "COMPLETE",
                name="labor_phase",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_labor_sessions_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_labor_sessions")),
    )
    op.create_table(
        "user_sessions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("expiration", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_user_sessions_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_sessions")),
    )
    op.create_table(
        "contractions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("labor_session_id", sa.UUID(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=False),
        sa.Column("intensity", sa.Integer(), nullable=False),
        sa.Column("notes", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["labor_session_id"],
            ["labor_sessions.id"],
            name=op.f("fk_contractions_labor_session_id_labor_sessions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_contractions")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("contractions")
    op.drop_table("user_sessions")
    op.drop_table("labor_sessions")
    op.drop_table("users")
    sa.Enum("EARLY", "ACTIVE", "TRANSITION", "PUSHING", "COMPLETE", name="labor_phase").drop(
        op.get_bind()
    )
    # ### end Alembic commands ###
