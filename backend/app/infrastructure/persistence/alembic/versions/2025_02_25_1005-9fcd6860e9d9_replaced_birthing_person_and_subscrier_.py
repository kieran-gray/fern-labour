"""replaced birthing person and subscrier with user

Revision ID: 9fcd6860e9d9
Revises: a090772db745
Create Date: 2025-02-25 10:05:27.565998

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9fcd6860e9d9"
down_revision: str | None = "a090772db745"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_labours_birthing_person_id_birthing_persons", "labours", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_subscriptions_subscriber_id_subscribers", "subscriptions", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_subscriptions_birthing_person_id_birthing_persons", "subscriptions", type_="foreignkey"
    )
    op.drop_table("subscribers")
    op.drop_table("birthing_persons")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(
        "fk_subscriptions_birthing_person_id_birthing_persons",
        "subscriptions",
        "birthing_persons",
        ["birthing_person_id"],
        ["id"],
    )
    op.create_foreign_key(
        "fk_subscriptions_subscriber_id_subscribers",
        "subscriptions",
        "subscribers",
        ["subscriber_id"],
        ["id"],
    )
    op.create_foreign_key(
        "fk_labours_birthing_person_id_birthing_persons",
        "labours",
        "birthing_persons",
        ["birthing_person_id"],
        ["id"],
    )
    op.create_table(
        "birthing_persons",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("phone_number", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="pk_birthing_persons"),
    )
    op.create_table(
        "subscribers",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("phone_number", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="pk_subscribers"),
    )
    # ### end Alembic commands ###
