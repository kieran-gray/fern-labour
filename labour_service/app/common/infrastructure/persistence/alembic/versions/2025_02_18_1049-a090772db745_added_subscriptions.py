"""added subscriptions

Revision ID: a090772db745
Revises: 2cdc05281379
Create Date: 2025-02-18 10:49:12.185944

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a090772db745"
down_revision: str | None = "2cdc05281379"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("EMAIL", "SMS", name="contactmethod").create(op.get_bind())
    sa.Enum("SUBSCRIBED", "UNSUBSCRIBED", "REMOVED", "BLOCKED", name="subscription_status").create(
        op.get_bind()
    )
    sa.Enum("BIRTH_PARTNER", "FRIENDS_AND_FAMILY", name="subscriber_role").create(op.get_bind())
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("labour_id", sa.UUID(), nullable=False),
        sa.Column("birthing_person_id", sa.String(), nullable=False),
        sa.Column("subscriber_id", sa.String(), nullable=False),
        sa.Column(
            "role",
            postgresql.ENUM(
                "BIRTH_PARTNER", "FRIENDS_AND_FAMILY", name="subscriber_role", create_type=False
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            postgresql.ENUM(
                "SUBSCRIBED",
                "UNSUBSCRIBED",
                "REMOVED",
                "BLOCKED",
                name="subscription_status",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "contact_methods",
            sa.ARRAY(postgresql.ENUM("EMAIL", "SMS", name="contactmethod", create_type=False)),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["birthing_person_id"],
            ["birthing_persons.id"],
            name=op.f("fk_subscriptions_birthing_person_id_birthing_persons"),
        ),
        sa.ForeignKeyConstraint(
            ["labour_id"], ["labours.id"], name=op.f("fk_subscriptions_labour_id_labours")
        ),
        sa.ForeignKeyConstraint(
            ["subscriber_id"],
            ["subscribers.id"],
            name=op.f("fk_subscriptions_subscriber_id_subscribers"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_subscriptions")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("subscriptions")
    sa.Enum("BIRTH_PARTNER", "FRIENDS_AND_FAMILY", name="subscriber_role").drop(op.get_bind())
    sa.Enum("SUBSCRIBED", "UNSUBSCRIBED", "REMOVED", "BLOCKED", name="subscription_status").drop(
        op.get_bind()
    )
    sa.Enum("EMAIL", "SMS", name="contactmethod").drop(op.get_bind())
    # ### end Alembic commands ###
