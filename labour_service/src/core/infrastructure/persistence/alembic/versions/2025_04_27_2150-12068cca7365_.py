"""empty message

Revision ID: 12068cca7365
Revises: 9c20dc3c22cc
Create Date: 2025-04-27 21:50:02.961245

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import ColumnType, TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "12068cca7365"
down_revision: str | None = "9c20dc3c22cc"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("notifications")
    sa.Enum("CREATED", "SENT", "FAILURE", "SUCCESS", name="notification_status").drop(op.get_bind())
    sa.Enum("EMAIL", "SMS", name="notification_type").drop(op.get_bind())
    op.sync_enum_values(
        enum_schema="public",
        enum_name="contactmethod",
        new_values=["EMAIL", "SMS", "WHATSAPP"],
        affected_columns=[
            TableReference(
                table_schema="public",
                table_name="subscriptions",
                column_name="contact_methods",
                column_type=ColumnType.ARRAY,
            )
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="contactmethod",
        new_values=["EMAIL", "SMS"],
        affected_columns=[
            TableReference(
                table_schema="public",
                table_name="subscriptions",
                column_name="contact_methods",
                column_type=ColumnType.ARRAY,
            )
        ],
        enum_values_to_rename=[],
    )
    sa.Enum("EMAIL", "SMS", name="notification_type").create(op.get_bind())
    sa.Enum("CREATED", "SENT", "FAILURE", "SUCCESS", name="notification_status").create(
        op.get_bind()
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "CREATED",
                "SENT",
                "FAILURE",
                "SUCCESS",
                name="notification_status",
                create_type=False,
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "type",
            postgresql.ENUM("EMAIL", "SMS", name="notification_type", create_type=False),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("destination", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("template", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("data", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("external_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "metadata", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="pk_notifications"),
    )
    # ### end Alembic commands ###
